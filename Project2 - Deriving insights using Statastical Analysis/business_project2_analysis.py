# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hGbDIlvvc3MZUwMLD0gmZGt-HpvIqmc4
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
data = pd.read_csv('cricket_wc_23_batting.csv')

print(data.head())  # Display the first few rows to understand the data structure
print(data.info())  # Check data types and non-null counts
print(data.describe())  # Summary statistics of numerical columns

runs_stats = data['runs'].describe()
balls_stats = data['balls'].describe()

# Display runs_stats and balls_stats
top_run_scorers = data.sort_values(by='runs', ascending=False).head(10)
top_boundary_hitters = data.sort_values(by=['4s', '6s'], ascending=False).head(10)

plt.figure(figsize=(10, 6))
sns.histplot(data['runs'], bins=20, kde=True)
plt.title('Distribution of Runs Scored')
plt.xlabel('Runs')
plt.ylabel('Frequency')
plt.show()

team_wise_runs = data.groupby('team')['runs'].sum().sort_values(ascending=False)
opponent_wise_runs = data.groupby('opponent')['runs'].sum().sort_values(ascending=False)


# Assuming 'runs' as the target variable and selecting features
X = data[['balls', 'strike_rate', '4s', '6s']]  # Selecting features
y = data['runs']  # Target variable

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initializing and fitting the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting runs on the test set
y_pred = model.predict(X_test)

# Model evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")